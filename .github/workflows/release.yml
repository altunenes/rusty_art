name: Multi-OS Binary Release

on:
  push:
    tags:
      - 'v*'

permissions: write-all

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        bin: [enigma, rainbow, footsteps, pixely, blobs, fibonacci, cliff, triangles, shapes, peace, plumes, attractors, waves, waves2, sine, mona, cafe_wall, munker, glow, pdiamond, lilac, fourier, nblur, pixelrain, tiles, pina, hole, pare, neuralnet, bhole, oscillation, gabor, chladni, hilbert, hilbertimg, snowflake, mandelbrot, leviant, spiralimg, eyes, imgblob, scramble, pixelate, rainbowimage, imfft, gaborill, imgabor, munkerclock, voronoi, lorenz, kaniza, ulam, dfft, butter2d, gaborwgpu, galaxy, mandelbrotgpu, chladniwgpu, snowflakewgpu, spiralimgwgpu, neuralnetwgpu, imlenswgpu, fbmflowgpu, lovewgpu, microscope, neurons, asahi, voronoiwgpu, voronoiwgpu2, fluid, asahi2, sinh, tree, expmandelbrotgpu, pupils, pixelflow, gaborlbrot, darkclouds, tunnel, neurons2, nebula, pixelsum, smoothneurons,gaussiansplat,gaborimage,rorschach]
        include:
          - target: x86_64-unknown-linux-gnu
            ext: ""
          - target: x86_64-pc-windows-gnu
            ext: ".exe"
          - target: x86_64-apple-darwin
            ext: ""
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin ${{ matrix.bin }}

      - name: Prepare assets
        run: |
          mkdir -p release/${{ matrix.bin }}
          cp "target/release/${{ matrix.bin }}${{ matrix.ext }}" "release/${{ matrix.bin }}/${{ matrix.bin }}${{ matrix.ext }}"
        shell: bash

      - name: Zip assets
        run: |
          if ("${{ runner.os }}" -eq "Windows") {
            Compress-Archive -Path "release/${{ matrix.bin }}/*" -DestinationPath "${{ matrix.bin }}-${{ matrix.os }}.zip"
          } else {
            zip -r "${{ matrix.bin }}-${{ matrix.os }}.zip" "release/${{ matrix.bin }}"
          }
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.bin }}-${{ matrix.os }}
          path: "${{ matrix.bin }}-${{ matrix.os }}.zip"

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: downloaded-artifacts

      - name: List downloaded artifacts directory structure
        run: |
          echo "Listing the structure of downloaded-artifacts directory:"
          tree downloaded-artifacts || ls -R downloaded-artifacts

      - name: List contents of each artifact directory
        run: |
          for dir in downloaded-artifacts/*; do
            echo "Listing contents of $dir"
            ls -la "$dir"
          done

      - name: Print environment variables
        run: |
          echo "Listing all environment variables:"
          printenv

      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "downloaded-artifacts/*/*.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          owner: altunenes
          repo: rusty_art
