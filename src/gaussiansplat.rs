use nannou::prelude::*;
use nannou_egui::{self, egui, Egui};
struct Model {
    render_pipeline: wgpu::RenderPipeline,
    vertex_buffer: wgpu::Buffer,
    time_uniform: wgpu::Buffer,
    time_bind_group: wgpu::BindGroup,
    params_uniform: wgpu::Buffer,
    params_bind_group: wgpu::BindGroup,
    data_bind_group: wgpu::BindGroup,
    settings:Settings,
    egui:Egui,
}
struct Settings {
    lambda: f32,
    theta: f32,
    alpha:f32,
    sigma: f32,
    gamma:f32,
    blue:f32,
    show_ui: bool,
}
#[repr(C)]
#[derive(Clone, Copy)]
struct Vertex {
    position: [f32; 2],
}
const VERTICES: [Vertex; 6] = [
    Vertex { position: [-1.0, -1.0] },
    Vertex { position: [ 1.0, -1.0] },
    Vertex { position: [-1.0,  1.0] },
    Vertex { position: [ 1.0, -1.0] },
    Vertex { position: [ 1.0,  1.0] },
    Vertex { position: [-1.0,  1.0] },
];
fn main() {
    nannou::app(model)
        .update(update) 
        .run();
}
fn update(app: &App, model: &mut Model, update: Update) {
    let egui = &mut model.egui;
    egui.set_elapsed_time(update.since_start);
    let ctx = egui.begin_frame();
    if app.keys.down.contains(&Key::H) {
        model.settings.show_ui = !model.settings.show_ui;
    }
    egui::Window::new("Shader Settings").show(&ctx, |ui| {
        ui.add(egui::Slider::new(&mut model.settings.lambda, -100.0..=-1.0).text("l"));
        ui.add(egui::Slider::new(&mut model.settings.theta, -10.0..=10.0).text("t"));
        ui.add(egui::Slider::new(&mut model.settings.alpha, 13.0..=15.0).text("a"));
        ui.add(egui::Slider::new(&mut model.settings.sigma, -2.0..=2.5).text("r"));
        ui.add(egui::Slider::new(&mut model.settings.gamma, -5.0..=20.0).text("g"));
        ui.add(egui::Slider::new(&mut model.settings.blue, -PI..=20.0).text("b"));

    });
    let params_data = [model.settings.lambda, model.settings.theta,model.settings.alpha, model.settings.sigma,model.settings.gamma,model.settings.blue];
    let params_bytes = bytemuck::cast_slice(&params_data);
    app.main_window().queue().write_buffer(&model.params_uniform, 0, &params_bytes);
}
fn raw_window_event(app: &App, model: &mut Model, event: &nannou::winit::event::WindowEvent) {
    model.egui.handle_raw_event(event);
    if let nannou::winit::event::WindowEvent::KeyboardInput { input, .. } = event {
        if let (Some(nannou::winit::event::VirtualKeyCode::F), true) =
            (input.virtual_keycode, input.state == nannou::winit::event::ElementState::Pressed)
        {
            let window = app.main_window();
            let fullscreen = window.fullscreen().is_some();
            window.set_fullscreen(!fullscreen);
        }
    }
}
fn model(app: &App) -> Model {
    let w_id = app.new_window().raw_event(raw_window_event).
    size(512, 512).view(view).build().unwrap();
    let window = app.window(w_id).unwrap();
    let device = window.device();
    let format = Frame::TEXTURE_FORMAT;
    let sample_count = window.msaa_samples();
    let vs_desc = wgpu::include_wgsl!("../shaders/vs.wgsl");
    let fs_desc = wgpu::include_wgsl!("../shaders/gaussiansplat.wgsl");
    let vs_mod = device.create_shader_module(vs_desc);
    let fs_mod = device.create_shader_module(fs_desc);
    let vertices_bytes = vertices_as_bytes(&VERTICES[..]);
    let usage = wgpu::BufferUsages::VERTEX;
    let vertex_buffer = device.create_buffer_init(&BufferInitDescriptor {
        label: None,
        contents: vertices_bytes,
        usage,
    });
    let data_array: [u32; 2343] = [
        0x04824000u32,
        0x121200bau32,
        0x00bababau32,
        0x0d824000u32,
        0x111200b9u32,
        0x00b9b9b9u32,
        0x16824000u32,
        0x111200bbu32,
        0x00bbbbbbu32,
        0x1f824000u32,
        0x111200bdu32,
        0x00bdbdbdu32,
        0x28824000u32,
        0x111200bcu32,
        0x00bcbcbcu32,
        0x31824000u32,
        0x111200bbu32,
        0x00bbbbbbu32,
        0x3a824000u32,
        0x111200bau32,
        0x00bababau32,
        0x43824000u32,
        0x111200b9u32,
        0x00b9b9b9u32,
        0x4c824000u32,
        0x111200bbu32,
        0x00bbbbbbu32,
        0x55824000u32,
        0x111200b9u32,
        0x00b9b9b9u32,
        0x5e820000u32,
        0x12117fbau32,
        0x00bababau32,
        0x6782c000u32,
        0x1316b3bau32,
        0x00bababau32,
        0x70820000u32,
        0x121200bbu32,
        0x00bbbbbbu32,
        0x79820000u32,
        0x121100bbu32,
        0x00bbbbbbu32,
        0x82824000u32,
        0x111400bau32,
        0x00bababau32,
        0x8b824000u32,
        0x111200bau32,
        0x00bababau32,
        0x94824000u32,
        0x111200b9u32,
        0x00b9b9b9u32,
        0x9d824000u32,
        0x111200b6u32,
        0x00b6b6b6u32,
        0xa6824000u32,
        0x111200b2u32,
        0x00b2b2b2u32,
        0xaf824000u32,
        0x111200afu32,
        0x00afafafu32,
        0xb8820000u32,
        0x1212afacu32,
        0x00acacacu32,
        0xc1820000u32,
        0x1212a7a4u32,
        0x00a4a4a4u32,
        0xca824000u32,
        0x1212a89au32,
        0x009a9a9au32,
        0xd3820000u32,
        0x1312a091u32,
        0x00919191u32,
        0xdd024000u32,
        0x12120085u32,
        0x00858585u32,
        0xe6820000u32,
        0x13120081u32,
        0x00818281u32,
        0xf0020000u32,
        0x1412697cu32,
        0x007c7c7cu32,
        0xfa824000u32,
        0x14120075u32,
        0x00757675u32,
        0x79860000u32,
        0x141166bbu32,
        0x00bbbbbbu32,
        0x5e868000u32,
        0x14127abcu32,
        0x00bcbcbcu32,
        0x7006c000u32,
        0x14142cbdu32,
        0x00bdbdbdu32,
        0xe606c000u32,
        0x1312537du32,
        0x007d7e7du32,
        0x0486c000u32,
        0x121100b9u32,
        0x00b9b9b9u32,
        0x0d86c000u32,
        0x111100b9u32,
        0x00b9b9b9u32,
        0x1686c000u32,
        0x111100bbu32,
        0x00bbbbbbu32,
        0x1f86c000u32,
        0x111100beu32,
        0x00bebebeu32,
        0x2886c000u32,
        0x111100beu32,
        0x00bebebeu32,
        0x3186c000u32,
        0x111100bfu32,
        0x00bfbfbfu32,
        0x3a86c000u32,
        0x111100beu32,
        0x00bebebeu32,
        0x4386c000u32,
        0x111100bdu32,
        0x00bdbdbdu32,
        0x4c86c000u32,
        0x111100bdu32,
        0x00bdbdbdu32,
        0x5586c000u32,
        0x121131bcu32,
        0x00bcbcbcu32,
        0x8b870000u32,
        0x121403b8u32,
        0x00b8b8b8u32,
        0x9486c000u32,
        0x111200bdu32,
        0x00bdbdbdu32,
        0x9d86c000u32,
        0x111100bau32,
        0x00bababau32,
        0xa686c000u32,
        0x111100b5u32,
        0x00b5b5b5u32,
        0xaf86c000u32,
        0x111100b3u32,
        0x00b3b3b3u32,
        0xb886c000u32,
        0x111100aeu32,
        0x00aeaeaeu32,
        0xc186c000u32,
        0x111100a6u32,
        0x00a6a6a6u32,
        0xca86c000u32,
        0x1111009bu32,
        0x009b9b9bu32,
        0xd386c000u32,
        0x11110090u32,
        0x00909090u32,
        0xdc86c000u32,
        0x11110084u32,
        0x00848484u32,
        0xf006c000u32,
        0x13115a7au32,
        0x007a7c7au32,
        0xfa86c000u32,
        0x14110075u32,
        0x00757775u32,
        0x82878000u32,
        0x141500b0u32,
        0x00b0b0b0u32,
        0x67884000u32,
        0x161700c0u32,
        0x00c0c0c0u32,
        0x7a0a8000u32,
        0x161200aeu32,
        0x00aeaeaeu32,
        0x710ac000u32,
        0x16107494u32,
        0x00949494u32,
        0x048b4000u32,
        0x121100bcu32,
        0x00bcbcbcu32,
        0x0d8b4000u32,
        0x111100bfu32,
        0x00bfbfbfu32,
        0x168b4000u32,
        0x111100c0u32,
        0x00c0c0c0u32,
        0x1f8b4000u32,
        0x111100c2u32,
        0x00c2c2c2u32,
        0x288b4000u32,
        0x111100c4u32,
        0x00c4c4c4u32,
        0x318b4000u32,
        0x111100c5u32,
        0x00c5c5c5u32,
        0x3a8b4000u32,
        0x111100c3u32,
        0x00c3c3c3u32,
        0x438b4000u32,
        0x111100c2u32,
        0x00c2c2c2u32,
        0x4c8b4000u32,
        0x11128cc2u32,
        0x00c2c2c2u32,
        0x558b4000u32,
        0x111390c2u32,
        0x00c2c2c2u32,
        0x5f0b4000u32,
        0x161575c1u32,
        0x00c1c1c1u32,
        0x950b4000u32,
        0x121421d3u32,
        0x00d3d3d3u32,
        0x9d8b0000u32,
        0x111000c5u32,
        0x00c5c5c5u32,
        0xa68b8000u32,
        0x111500bcu32,
        0x00bcbcbcu32,
        0xaf8b4000u32,
        0x111300b8u32,
        0x00b8b8b8u32,
        0xb88b4000u32,
        0x111200b1u32,
        0x00b1b1b1u32,
        0xc18b4000u32,
        0x111100a9u32,
        0x00a9a9a9u32,
        0xca8b4000u32,
        0x1111009du32,
        0x009d9d9du32,
        0xd38b4000u32,
        0x11110090u32,
        0x00909090u32,
        0xdc8b4000u32,
        0x12116d80u32,
        0x00808180u32,
        0xe60b4000u32,
        0x1311007bu32,
        0x007b7d7bu32,
        0xf00b4000u32,
        0x13115a77u32,
        0x00777877u32,
        0xfa8b4000u32,
        0x14110073u32,
        0x00737473u32,
        0x8c0b8000u32,
        0x131100deu32,
        0x00dededeu32,
        0x828c0000u32,
        0x151000d6u32,
        0x00d6d6d6u32,
        0x680c4000u32,
        0x160e0077u32,
        0x00777777u32,
        0x710ec000u32,
        0x1315a6c4u32,
        0x00c4c4c4u32,
        0x790f0000u32,
        0x131400dau32,
        0x00dadadau32,
        0x580f8000u32,
        0x161567c0u32,
        0x00c0c0c0u32,
        0x60900000u32,
        0x12169d7du32,
        0x007d7d7du32,
        0x4d8fc000u32,
        0x14135bc0u32,
        0x00c0c0c0u32,
        0x68904000u32,
        0x1315b2adu32,
        0x00adadadu32,
        0x8b0fc000u32,
        0x121200f7u32,
        0x00f7f7f7u32,
        0x94100000u32,
        0x131400efu32,
        0x00efefefu32,
        0x9e0f8000u32,
        0x171100c7u32,
        0x00c7c7c7u32,
        0xb18fc000u32,
        0x121507b0u32,
        0x00b0b0b0u32,
        0x048fc000u32,
        0x121100bbu32,
        0x00bbbbbbu32,
        0x0d8fc000u32,
        0x111100bdu32,
        0x00bdbdbdu32,
        0x168fc000u32,
        0x111100bfu32,
        0x00bfbfbfu32,
        0x1f8fc000u32,
        0x111100c0u32,
        0x00c0c0c0u32,
        0x288fc000u32,
        0x111100c1u32,
        0x00c1c1c1u32,
        0x318fc000u32,
        0x111100c2u32,
        0x00c2c2c2u32,
        0x3a8fc000u32,
        0x111100bfu32,
        0x00bfbfbfu32,
        0x438fc000u32,
        0x12115ec0u32,
        0x00c0c0c0u32,
        0xa7900000u32,
        0x1613009au32,
        0x009a9a9au32,
        0xb9900000u32,
        0x111504acu32,
        0x00acacacu32,
        0xc20fc000u32,
        0x101213a3u32,
        0x00a3a3a3u32,
        0xca8fc000u32,
        0x11110097u32,
        0x00979797u32,
        0xd38fc000u32,
        0x1111008bu32,
        0x008b8b8bu32,
        0xdc8fc000u32,
        0x1111007au32,
        0x007a7c7au32,
        0xe60fc000u32,
        0x13115a73u32,
        0x00737473u32,
        0xf00fc000u32,
        0x13115a6fu32,
        0x006f706fu32,
        0xfa8fc000u32,
        0x1411006bu32,
        0x006b6b6bu32,
        0x82104000u32,
        0x141200f2u32,
        0x00f2f2f2u32,
        0xac93c000u32,
        0x1117007eu32,
        0x007e7e7eu32,
        0x54940000u32,
        0x131400b9u32,
        0x00b9b9b9u32,
        0x70140000u32,
        0x131385cdu32,
        0x00cdcdcdu32,
        0x79944000u32,
        0x121300e5u32,
        0x00e5e5e5u32,
        0x9d93c000u32,
        0x10130dceu32,
        0x00cececeu32,
        0x4c144000u32,
        0x101200bbu32,
        0x00bbbbbbu32,
        0x5d948000u32,
        0x14133f78u32,
        0x00787878u32,
        0x8c144000u32,
        0x13125af8u32,
        0x00f8f8f8u32,
        0xa4148000u32,
        0x10170095u32,
        0x00959595u32,
        0xb5948000u32,
        0x161564a9u32,
        0x00a9a9a9u32,
        0x04944000u32,
        0x121100bbu32,
        0x00bbbbbbu32,
        0x0d944000u32,
        0x111100bcu32,
        0x00bcbcbcu32,
        0x16944000u32,
        0x111100beu32,
        0x00bebebeu32,
        0x1f944000u32,
        0x111100bfu32,
        0x00bfbfbfu32,
        0x28944000u32,
        0x111100beu32,
        0x00bebebeu32,
        0x31944000u32,
        0x111100bfu32,
        0x00bfbfbfu32,
        0x3a944000u32,
        0x111100bbu32,
        0x00bbbbbbu32,
        0x43944000u32,
        0x111100bau32,
        0x00bababau32,
        0x6694c000u32,
        0x121515a8u32,
        0x00a8a8a8u32,
        0x95948000u32,
        0x14134eefu32,
        0x00efefefu32,
        0xc0944000u32,
        0x1312669fu32,
        0x009f9f9fu32,
        0xca944000u32,
        0x12110094u32,
        0x00949494u32,
        0xd3944000u32,
        0x11110087u32,
        0x00878787u32,
        0xdc944000u32,
        0x11110075u32,
        0x00767775u32,
        0xe6144000u32,
        0x13115a6eu32,
        0x006e6e6eu32,
        0xf0144000u32,
        0x13115a69u32,
        0x00696969u32,
        0xfa944000u32,
        0x14110065u32,
        0x00656565u32,
        0x82948000u32,
        0x121200f2u32,
        0x00f2f2f2u32,
        0xa7984000u32,
        0x1414097eu32,
        0x007e7e7eu32,
        0x6f988000u32,
        0x15133dcbu32,
        0x00cbcbcbu32,
        0xaf994000u32,
        0x1217a494u32,
        0x00949494u32,
        0xb898c000u32,
        0x121400a3u32,
        0x00a3a3a3u32,
        0x5498c000u32,
        0x101200aau32,
        0x00aaaaaau32,
        0x5d98c000u32,
        0x1413446cu32,
        0x006c6c6cu32,
        0x9d98c000u32,
        0x131300d5u32,
        0x00d5d5d5u32,
        0xc198c000u32,
        0x11128998u32,
        0x00989898u32,
        0x0498c000u32,
        0x121100b8u32,
        0x00b8b8b8u32,
        0x0d98c000u32,
        0x111100b9u32,
        0x00b9b9b9u32,
        0x1698c000u32,
        0x111100b9u32,
        0x00b9b9b9u32,
        0x1f98c000u32,
        0x111100bau32,
        0x00bababau32,
        0x2898c000u32,
        0x111100b9u32,
        0x00b9b9b9u32,
        0x3198c000u32,
        0x111100b7u32,
        0x00b7b7b7u32,
        0x3a98c000u32,
        0x111100b0u32,
        0x00b0b0b0u32,
        0x4398c000u32,
        0x111100aeu32,
        0x00aeaeaeu32,
        0x4c98c000u32,
        0x101100adu32,
        0x00adadadu32,
        0x7918c000u32,
        0x131169d4u32,
        0x00d4d4d4u32,
        0x8b98c000u32,
        0x121100e9u32,
        0x00e9e9e9u32,
        0x94990000u32,
        0x121200dfu32,
        0x00dfdfdfu32,
        0xca98c000u32,
        0x1111008fu32,
        0x008f8f8fu32,
        0xd398c000u32,
        0x11110085u32,
        0x00858585u32,
        0xdc98c000u32,
        0x11110074u32,
        0x00747574u32,
        0xe618c000u32,
        0x13115a6au32,
        0x006a6a6au32,
        0xf018c000u32,
        0x13115a65u32,
        0x00656565u32,
        0xfa98c000u32,
        0x1411005fu32,
        0x005f5f5fu32,
        0x82994000u32,
        0x131300dfu32,
        0x00dfdfdfu32,
        0x6719c000u32,
        0x12160097u32,
        0x00979797u32,
        0xa61c8000u32,
        0x161500a5u32,
        0x00a5a5a5u32,
        0x549d4000u32,
        0x1114949du32,
        0x009d9d9du32,
        0x709d4000u32,
        0x14162bc0u32,
        0x00c0c0c0u32,
        0x049d4000u32,
        0x121100b5u32,
        0x00b5b5b5u32,
        0x0d9d4000u32,
        0x111100b5u32,
        0x00b5b5b5u32,
        0x169d4000u32,
        0x111100b5u32,
        0x00b5b5b5u32,
        0x1f9d4000u32,
        0x111100b5u32,
        0x00b5b5b5u32,
        0x289d4000u32,
        0x111100b2u32,
        0x00b2b2b2u32,
        0x319d4000u32,
        0x111100aeu32,
        0x00aeaeaeu32,
        0x3a9d4000u32,
        0x111100a6u32,
        0x00a6a6a6u32,
        0x439d4000u32,
        0x111100a3u32,
        0x00a3a3a3u32,
        0x4c1d4000u32,
        0x101200a0u32,
        0x00a0a0a0u32,
        0x5d9d4000u32,
        0x15120063u32,
        0x00636363u32,
        0x799d4000u32,
        0x121305c7u32,
        0x00c7c7c7u32,
        0x8b9d0000u32,
        0x141100d5u32,
        0x00d5d5d5u32,
        0x949d4000u32,
        0x131200c9u32,
        0x00c9c9c9u32,
        0x9e1d8000u32,
        0x141300cdu32,
        0x00cdcdcdu32,
        0xb89d4000u32,
        0x16110097u32,
        0x00979797u32,
        0xc19d4000u32,
        0x11110094u32,
        0x00949494u32,
        0xca9d4000u32,
        0x1111008cu32,
        0x008c8c8cu32,
        0xd39d4000u32,
        0x11110083u32,
        0x00838483u32,
        0xdc9d4000u32,
        0x11110073u32,
        0x00737373u32,
        0xe61d4000u32,
        0x13115a67u32,
        0x00676767u32,
        0xf01d4000u32,
        0x13115a61u32,
        0x00616161u32,
        0xfa9d4000u32,
        0x1411005bu32,
        0x005b5b5bu32,
        0xaf9e0000u32,
        0x16148cbau32,
        0x00bababau32,
        0x821e0000u32,
        0x151300c7u32,
        0x00c7c7c7u32,
        0x661e8000u32,
        0x15160080u32,
        0x00808080u32,
        0x6da0c000u32,
        0x180e4f7au32,
        0x007a7a7au32,
        0xa6214000u32,
        0x1313b3bbu32,
        0x00bbbbbbu32,
        0x56220000u32,
        0x14133b88u32,
        0x00888888u32,
        0x78a1c000u32,
        0x1a1556a3u32,
        0x00a3a3a3u32,
        0x8ba14000u32,
        0x1a11008au32,
        0x008a8a8au32,
        0x94218000u32,
        0x131200a3u32,
        0x00a3a3a3u32,
        0x04a1c000u32,
        0x121100b4u32,
        0x00b4b4b4u32,
        0x0da1c000u32,
        0x111100b4u32,
        0x00b4b4b4u32,
        0x16a1c000u32,
        0x111100b3u32,
        0x00b3b3b3u32,
        0x1fa1c000u32,
        0x111100aeu32,
        0x00aeaeaeu32,
        0x28a1c000u32,
        0x111100a5u32,
        0x00a5a5a5u32,
        0x31a1c000u32,
        0x1111009fu32,
        0x009f9f9fu32,
        0x3aa1c000u32,
        0x11110096u32,
        0x00969696u32,
        0x43a1c000u32,
        0x11110090u32,
        0x00909090u32,
        0x4ca1c000u32,
        0x1211008du32,
        0x008d8d8du32,
        0x5ea1c000u32,
        0x17130057u32,
        0x00575757u32,
        0x9d220000u32,
        0x13123cbcu32,
        0x00bcbcbcu32,
        0xb8a1c000u32,
        0x12113c9eu32,
        0x009e9e9eu32,
        0xc1a1c000u32,
        0x11110090u32,
        0x00909090u32,
        0xcaa1c000u32,
        0x11110088u32,
        0x00888888u32,
        0xd3a1c000u32,
        0x1111007fu32,
        0x007f807fu32,
        0xdca1c000u32,
        0x11110070u32,
        0x00707070u32,
        0xe621c000u32,
        0x13115a64u32,
        0x00646464u32,
        0xf021c000u32,
        0x13115a5eu32,
        0x005e5e5eu32,
        0xfaa1c000u32,
        0x14110059u32,
        0x00595959u32,
        0x83228000u32,
        0x20155161u32,
        0x00616161u32,
        0xafa24000u32,
        0x1412009fu32,
        0x009f9f9fu32,
        0x66a38000u32,
        0x18100043u32,
        0x00434343u32,
        0x70a44000u32,
        0x12160848u32,
        0x00484848u32,
        0x79264000u32,
        0x141514c6u32,
        0x00c6c6c6u32,
        0x8a25c000u32,
        0x14137ea0u32,
        0x00a0a0a0u32,
        0x80a60000u32,
        0x131130afu32,
        0x00afafafu32,
        0xa725c000u32,
        0x131394beu32,
        0x00bebebeu32,
        0x94260000u32,
        0x141100c1u32,
        0x00c1c1c1u32,
        0x04a64000u32,
        0x121100b3u32,
        0x00b3b3b3u32,
        0x0da64000u32,
        0x111100b3u32,
        0x00b3b3b3u32,
        0x16a64000u32,
        0x111100adu32,
        0x00adadadu32,
        0x1fa64000u32,
        0x1111009fu32,
        0x009f9f9fu32,
        0x28a64000u32,
        0x11110091u32,
        0x00919191u32,
        0x31a64000u32,
        0x1111008cu32,
        0x008c8c8cu32,
        0x3aa64000u32,
        0x11110083u32,
        0x00838483u32,
        0x43a64000u32,
        0x1111007bu32,
        0x007b7b7bu32,
        0x4ca64000u32,
        0x11110076u32,
        0x00767776u32,
        0x56264000u32,
        0x14117472u32,
        0x00727372u32,
        0x5ea6c000u32,
        0x14140060u32,
        0x00606060u32,
        0x9da64000u32,
        0x131200b4u32,
        0x00b4b4b4u32,
        0xb8a64000u32,
        0x1311389au32,
        0x009a9a9au32,
        0xc1a64000u32,
        0x11110090u32,
        0x00909090u32,
        0xcaa64000u32,
        0x11110087u32,
        0x00878787u32,
        0xd3a64000u32,
        0x1111007fu32,
        0x007f817fu32,
        0xdca64000u32,
        0x1111006fu32,
        0x006f6f6fu32,
        0xe6264000u32,
        0x13115a61u32,
        0x00616161u32,
        0xf0264000u32,
        0x13115a5bu32,
        0x005b5b5bu32,
        0xfaa64000u32,
        0x14110057u32,
        0x00575757u32,
        0xafa70000u32,
        0x1314a1bcu32,
        0x00bcbcbcu32,
        0x69a68000u32,
        0x15105661u32,
        0x00616161u32,
        0x6faa4000u32,
        0x1119a764u32,
        0x00646464u32,
        0x822a4000u32,
        0x1316acbeu32,
        0x00bebebeu32,
        0x672a4000u32,
        0x1212006bu32,
        0x006b6b6bu32,
        0x8baa8000u32,
        0x13149dbau32,
        0x00bababau32,
        0x94aa4000u32,
        0x11127faeu32,
        0x00aeaeaeu32,
        0xa5aa8000u32,
        0x121300beu32,
        0x00bebebeu32,
        0x782ac000u32,
        0x141300beu32,
        0x00bebebeu32,
        0x04aac000u32,
        0x121100b4u32,
        0x00b4b4b4u32,
        0x0daac000u32,
        0x111100b2u32,
        0x00b2b2b2u32,
        0x16aac000u32,
        0x111187a4u32,
        0x00a4a4a4u32,
        0x1faac000u32,
        0x1211008fu32,
        0x008f8f8fu32,
        0x28aac000u32,
        0x11110085u32,
        0x00858585u32,
        0x31aac000u32,
        0x1111007fu32,
        0x007f817fu32,
        0x3aaac000u32,
        0x11110076u32,
        0x00767876u32,
        0x43aac000u32,
        0x1111006fu32,
        0x006f6f6fu32,
        0x4caac000u32,
        0x11110069u32,
        0x00696969u32,
        0x562ac000u32,
        0x13116463u32,
        0x00636363u32,
        0x9d2ac000u32,
        0x111100b5u32,
        0x00b5b5b5u32,
        0xb82ac000u32,
        0x14110099u32,
        0x00999999u32,
        0xc1aac000u32,
        0x11110090u32,
        0x00909090u32,
        0xcaaac000u32,
        0x11110086u32,
        0x00868686u32,
        0xd3aac000u32,
        0x1111007fu32,
        0x007f817fu32,
        0xdcaac000u32,
        0x11118e6fu32,
        0x006f6f6fu32,
        0xe5aac000u32,
        0x1311005du32,
        0x005d5d5du32,
        0xf02ac000u32,
        0x14110058u32,
        0x00585858u32,
        0xfaaac000u32,
        0x14110056u32,
        0x00565656u32,
        0x5f2b4000u32,
        0x14124f53u32,
        0x00535353u32,
        0xaeabc000u32,
        0x14130091u32,
        0x00919191u32,
        0x67ae8000u32,
        0x16137b50u32,
        0x00505050u32,
        0x71af8000u32,
        0x19168168u32,
        0x00686868u32,
        0x952ec000u32,
        0x12121ebcu32,
        0x00bcbcbcu32,
        0x16af4000u32,
        0x11128f98u32,
        0x00989898u32,
        0x7b2f4000u32,
        0x18168d8au32,
        0x008a8a8au32,
        0x8caf8000u32,
        0x131400b1u32,
        0x00b1b1b1u32,
        0xa62f4000u32,
        0x111200b5u32,
        0x00b5b5b5u32,
        0x04af4000u32,
        0x121100b4u32,
        0x00b4b4b4u32,
        0x0daf4000u32,
        0x111100a9u32,
        0x00a9a9a9u32,
        0x1faf4000u32,
        0x1111008cu32,
        0x008c8c8cu32,
        0x28af4000u32,
        0x1111007bu32,
        0x007b7c7bu32,
        0x31af4000u32,
        0x11110076u32,
        0x00767876u32,
        0x3aaf4000u32,
        0x1111006fu32,
        0x006f706fu32,
        0x43af4000u32,
        0x11110069u32,
        0x00696969u32,
        0x4caf4000u32,
        0x11110063u32,
        0x00636363u32,
        0x55af4000u32,
        0x11118e5du32,
        0x005d5d5du32,
        0x83afc000u32,
        0x161500c2u32,
        0x00c2c2c2u32,
        0x9daf4000u32,
        0x111100c0u32,
        0x00c0c0c0u32,
        0xb82f4000u32,
        0x14120095u32,
        0x00959595u32,
        0xc1af4000u32,
        0x11110090u32,
        0x00909090u32,
        0xcaaf4000u32,
        0x11110085u32,
        0x00858585u32,
        0xd3af4000u32,
        0x1111007eu32,
        0x007e7f7eu32,
        0xdc2f4000u32,
        0x1011006du32,
        0x006d6d6du32,
        0xe5af4000u32,
        0x13115c5au32,
        0x005a5a5au32,
        0xefaf4000u32,
        0x14126257u32,
        0x00575757u32,
        0xfa2f4000u32,
        0x15110054u32,
        0x00545454u32,
        0x5eafc000u32,
        0x14124057u32,
        0x00575757u32,
        0xaeb04000u32,
        0x14157da9u32,
        0x00a9a9a9u32,
        0x68330000u32,
        0x15137363u32,
        0x00636363u32,
        0xaeb48000u32,
        0x151c90f2u32,
        0x00f2f2f2u32,
        0x94334000u32,
        0x131265b6u32,
        0x00b6b6b6u32,
        0xb7b3c000u32,
        0x1514007bu32,
        0x007b7b7bu32,
        0xdcb3c000u32,
        0x1112236au32,
        0x006a6a6au32,
        0xe633c000u32,
        0x1312005au32,
        0x005a5a5au32,
        0x04b3c000u32,
        0x121100b1u32,
        0x00b1b1b1u32,
        0x0db3c000u32,
        0x111100a3u32,
        0x00a3a3a3u32,
        0x16b3c000u32,
        0x11110095u32,
        0x00959595u32,
        0x1fb3c000u32,
        0x1111008au32,
        0x008a8a8au32,
        0x28b3c000u32,
        0x11110076u32,
        0x00767776u32,
        0x31b3c000u32,
        0x11110071u32,
        0x00717371u32,
        0x3ab3c000u32,
        0x1111006bu32,
        0x006b6b6bu32,
        0x43b3c000u32,
        0x11110064u32,
        0x00646464u32,
        0x4cb3c000u32,
        0x1111005eu32,
        0x005e5e5eu32,
        0x55b3c000u32,
        0x12116758u32,
        0x00585858u32,
        0x79b40000u32,
        0x1a11686bu32,
        0x006b6b6bu32,
        0x9db38000u32,
        0x121072bau32,
        0x00bababau32,
        0xa6340000u32,
        0x151600b6u32,
        0x00b6b6b6u32,
        0xc1338000u32,
        0x13116182u32,
        0x00828282u32,
        0xcab3c000u32,
        0x11121884u32,
        0x00848484u32,
        0xd3b40000u32,
        0x1212007du32,
        0x007d7e7du32,
        0xf0340000u32,
        0x14120057u32,
        0x00575757u32,
        0xfab3c000u32,
        0x14110054u32,
        0x00545454u32,
        0x5f340000u32,
        0x15120053u32,
        0x00535353u32,
        0x8bb40000u32,
        0x131100a9u32,
        0x00a9a9a9u32,
        0x83340000u32,
        0x1a106984u32,
        0x00848484u32,
        0x7133c000u32,
        0x170d6740u32,
        0x00404040u32,
        0xb1380000u32,
        0x14179a82u32,
        0x00828482u32,
        0x69374000u32,
        0x1416006du32,
        0x006d6d6du32,
        0x70384000u32,
        0x13159095u32,
        0x00959595u32,
        0x82b80000u32,
        0x121300c2u32,
        0x00c2c2c2u32,
        0x79388000u32,
        0x141600bbu32,
        0x00bbbbbbu32,
        0x94b7c000u32,
        0x11118cc6u32,
        0x00c6c6c6u32,
        0xb9b84000u32,
        0x1114a976u32,
        0x00767776u32,
        0xc2380000u32,
        0x1113ab72u32,
        0x00727272u32,
        0x8c380000u32,
        0x121152c7u32,
        0x00c7c7c7u32,
        0x9db80000u32,
        0x16147db4u32,
        0x00b4b4b4u32,
        0x04b84000u32,
        0x121100adu32,
        0x00adadadu32,
        0x0db84000u32,
        0x111100a0u32,
        0x00a0a0a0u32,
        0x16b84000u32,
        0x11110093u32,
        0x00939393u32,
        0x1fb84000u32,
        0x11110083u32,
        0x00838483u32,
        0x28b84000u32,
        0x11110073u32,
        0x00737573u32,
        0x31b84000u32,
        0x11110070u32,
        0x00707170u32,
        0x3ab84000u32,
        0x11110069u32,
        0x00696969u32,
        0x43b84000u32,
        0x11110061u32,
        0x00616161u32,
        0x4cb84000u32,
        0x1111005au32,
        0x005a5a5au32,
        0x56384000u32,
        0x13115a54u32,
        0x00545454u32,
        0x60b88000u32,
        0x16135950u32,
        0x00505050u32,
        0xa6b94000u32,
        0x191a87f9u32,
        0x00f9f9f9u32,
        0xcab84000u32,
        0x1111006bu32,
        0x006b6b6bu32,
        0xdcb84000u32,
        0x11110068u32,
        0x00686868u32,
        0xe6384000u32,
        0x1412595bu32,
        0x005b5b5bu32,
        0xfab80000u32,
        0x14100053u32,
        0x00535353u32,
        0xd3b84000u32,
        0x1110006bu32,
        0x006b6b6bu32,
        0xf038c000u32,
        0x14135555u32,
        0x00555555u32,
        0x683c8000u32,
        0x16162947u32,
        0x00474747u32,
        0x8b3c0000u32,
        0x131200ceu32,
        0x00cececeu32,
        0x9dbd4000u32,
        0x1c1c86fbu32,
        0x00fbfbfbu32,
        0xaf3c0000u32,
        0x15130078u32,
        0x00787978u32,
        0x82bc8000u32,
        0x131400c9u32,
        0x00c9c9c9u32,
        0x94bc0000u32,
        0x171400bdu32,
        0x00bdbdbdu32,
        0x5ebcc000u32,
        0x11122b4bu32,
        0x004b4b4bu32,
        0x723cc000u32,
        0x1714008du32,
        0x008d8d8du32,
        0xb83cc000u32,
        0x13120068u32,
        0x00686868u32,
        0xc1bcc000u32,
        0x1112386bu32,
        0x006b6b6bu32,
        0xd3bcc000u32,
        0x11121262u32,
        0x00626262u32,
        0xfabc4000u32,
        0x15100059u32,
        0x00595959u32,
        0x04bcc000u32,
        0x121100aau32,
        0x00aaaaaau32,
        0x0dbcc000u32,
        0x1111009cu32,
        0x009c9c9cu32,
        0x16bcc000u32,
        0x11110090u32,
        0x00909190u32,
        0x1fbcc000u32,
        0x1111007du32,
        0x007d7f7du32,
        0x28bcc000u32,
        0x11110070u32,
        0x00707170u32,
        0x31bcc000u32,
        0x1111006cu32,
        0x006c6c6cu32,
        0x3abcc000u32,
        0x11110066u32,
        0x00666666u32,
        0x43bcc000u32,
        0x1111005cu32,
        0x005c5c5cu32,
        0x4cbcc000u32,
        0x11110056u32,
        0x00565656u32,
        0x55bcc000u32,
        0x11110051u32,
        0x00515151u32,
        0xcabd0000u32,
        0x1112006cu32,
        0x006c6c6cu32,
        0xdd3cc000u32,
        0x1211006fu32,
        0x006f6f6fu32,
        0x7abd4000u32,
        0x17132ba9u32,
        0x00a9a9a9u32,
        0xe6bd0000u32,
        0x13110073u32,
        0x00737373u32,
        0xa7bdc000u32,
        0x15130072u32,
        0x00727272u32,
        0xf0bd4000u32,
        0x1611516bu32,
        0x006b6b6bu32,
        0x7040c000u32,
        0x13190054u32,
        0x00545454u32,
        0x8c3f8000u32,
        0x1b137565u32,
        0x00656565u32,
        0x95410000u32,
        0x1c1856fbu32,
        0x00fbfbfbu32,
        0xfa40c000u32,
        0x15146473u32,
        0x00737373u32,
        0xb0410000u32,
        0x1214a968u32,
        0x00686868u32,
        0x9fc1c000u32,
        0x1418957cu32,
        0x007c7c7cu32,
        0x67c18000u32,
        0x1314003cu32,
        0x003c3c3cu32,
        0xb8c14000u32,
        0x1113005au32,
        0x005a5a5au32,
        0xc1c10000u32,
        0x12120056u32,
        0x00565656u32,
        0x04c14000u32,
        0x121100a9u32,
        0x00a9a9a9u32,
        0x0dc14000u32,
        0x1111009cu32,
        0x009c9c9cu32,
        0x16c14000u32,
        0x11110090u32,
        0x00909090u32,
        0x1fc14000u32,
        0x1111007du32,
        0x007d7e7du32,
        0x28c14000u32,
        0x1111006eu32,
        0x006e6e6eu32,
        0x31c14000u32,
        0x11110068u32,
        0x00686868u32,
        0x3ac14000u32,
        0x11110065u32,
        0x00656565u32,
        0x43c14000u32,
        0x1111005cu32,
        0x005c5c5cu32,
        0x4cc14000u32,
        0x11110055u32,
        0x00555555u32,
        0x55c14000u32,
        0x1111004bu32,
        0x004b4b4bu32,
        0x5ec14000u32,
        0x11120041u32,
        0x00414141u32,
        0x7a414000u32,
        0x14140050u32,
        0x00505050u32,
        0x83c18000u32,
        0x1417004bu32,
        0x004b4b4bu32,
        0xd3c14000u32,
        0x12130060u32,
        0x00606060u32,
        0xdcc14000u32,
        0x11130069u32,
        0x00696969u32,
        0xe5c14000u32,
        0x1314796du32,
        0x006d6d6du32,
        0xa7c1c000u32,
        0x1314245fu32,
        0x005f5f5fu32,
        0xcac1c000u32,
        0x12130a61u32,
        0x00616161u32,
        0xf041c000u32,
        0x1513496cu32,
        0x006c6c6cu32,
        0x8ec48000u32,
        0x241f48f2u32,
        0x00f2f2f2u32,
        0x74c54000u32,
        0x14189323u32,
        0x00232323u32,
        0x81450000u32,
        0x191752b5u32,
        0x00b5b5b5u32,
        0xfac54000u32,
        0x14130064u32,
        0x00646464u32,
        0xe8458000u32,
        0x1318004fu32,
        0x004f4f4fu32,
        0x5f45c000u32,
        0x1312003bu32,
        0x003b3b3bu32,
        0x7b468000u32,
        0x17180069u32,
        0x00696969u32,
        0x9ac60000u32,
        0x19140070u32,
        0x00707070u32,
        0xa5460000u32,
        0x14125557u32,
        0x00575757u32,
        0xaf45c000u32,
        0x1412735au32,
        0x005a5a5au32,
        0xc1c5c000u32,
        0x1213954bu32,
        0x004b4b4bu32,
        0xdf45c000u32,
        0x14152b63u32,
        0x00636363u32,
        0x04c5c000u32,
        0x121100a8u32,
        0x00a8a8a8u32,
        0x0dc5c000u32,
        0x1111009cu32,
        0x009c9c9cu32,
        0x16c5c000u32,
        0x1111008fu32,
        0x008f8f8fu32,
        0x1fc5c000u32,
        0x11110080u32,
        0x00808080u32,
        0x28c5c000u32,
        0x1111006du32,
        0x006d6e6du32,
        0x31c60000u32,
        0x1113006au32,
        0x006a6a6au32,
        0x3ac5c000u32,
        0x11110067u32,
        0x00676767u32,
        0x43c5c000u32,
        0x1111005bu32,
        0x005b5b5bu32,
        0x4cc5c000u32,
        0x11110054u32,
        0x00545454u32,
        0x55c5c000u32,
        0x12117249u32,
        0x00494949u32,
        0x69c5c000u32,
        0x1513642fu32,
        0x002f2f2fu32,
        0xb8c5c000u32,
        0x1212004eu32,
        0x004e4e4eu32,
        0xd5460000u32,
        0x14151161u32,
        0x00616161u32,
        0xcb460000u32,
        0x14136353u32,
        0x00535353u32,
        0xf1468000u32,
        0x1615006du32,
        0x006d6d6du32,
        0x89c84000u32,
        0x171700f5u32,
        0x00f5f5f5u32,
        0x92c9c000u32,
        0x1917006du32,
        0x006d6d6du32,
        0x7049c000u32,
        0x14170022u32,
        0x00222222u32,
        0x7aca8000u32,
        0x151b912du32,
        0x002d2d2du32,
        0x834b0000u32,
        0x141f003au32,
        0x003a3a3au32,
        0xd24a4000u32,
        0x1318223bu32,
        0x003b3b3bu32,
        0xe54a8000u32,
        0x1217ad38u32,
        0x00383838u32,
        0xfac98000u32,
        0x16130073u32,
        0x00737373u32,
        0x66ca4000u32,
        0x13150025u32,
        0x00252525u32,
        0xdbca4000u32,
        0x17135d5eu32,
        0x005e5e5eu32,
        0x9bca8000u32,
        0x12159764u32,
        0x00646464u32,
        0xa5ca0000u32,
        0x14136054u32,
        0x00545454u32,
        0xb94a4000u32,
        0x13130042u32,
        0x00424242u32,
        0xc34a8000u32,
        0x15140043u32,
        0x00434343u32,
        0x04ca4000u32,
        0x121100a7u32,
        0x00a7a7a7u32,
        0x0dca4000u32,
        0x11110099u32,
        0x00999999u32,
        0x16ca4000u32,
        0x11110091u32,
        0x00919191u32,
        0x1fca4000u32,
        0x11110084u32,
        0x00848484u32,
        0x28ca4000u32,
        0x13117a6fu32,
        0x006f706fu32,
        0x3aca4000u32,
        0x13113264u32,
        0x00646464u32,
        0x43ca4000u32,
        0x1111005bu32,
        0x005b5b5bu32,
        0x4cca4000u32,
        0x11110052u32,
        0x00525252u32,
        0x55ca4000u32,
        0x11110046u32,
        0x00464646u32,
        0x5e4a4000u32,
        0x11120032u32,
        0x00323232u32,
        0xafca4000u32,
        0x12110056u32,
        0x00565656u32,
        0xcc4b0000u32,
        0x1317006cu32,
        0x006c6c6cu32,
        0x31cb4000u32,
        0x14150e69u32,
        0x00696969u32,
        0xef4b8000u32,
        0x1617006au32,
        0x006a6a6au32,
        0x8ace4000u32,
        0x18180056u32,
        0x00565656u32,
        0xf94d8000u32,
        0x19100068u32,
        0x00686868u32,
        0x74ce8000u32,
        0x22195b39u32,
        0x00393939u32,
        0x9f4e8000u32,
        0x13188a4du32,
        0x004d4d4du32,
        0x94ce8000u32,
        0x15150061u32,
        0x00616161u32,
        0xa84e8000u32,
        0x11140061u32,
        0x00616161u32,
        0xc9cf4000u32,
        0x13190046u32,
        0x00464646u32,
        0xc0cec000u32,
        0x11140040u32,
        0x00404040u32,
        0xdcce8000u32,
        0x15120057u32,
        0x00575757u32,
        0x5f4ec000u32,
        0x1412002cu32,
        0x002c2c2cu32,
        0x694ec000u32,
        0x1313002au32,
        0x002a2a2au32,
        0xb04ec000u32,
        0x1013a856u32,
        0x00565656u32,
        0xb84ec000u32,
        0x11120044u32,
        0x00444444u32,
        0x04cec000u32,
        0x121100a9u32,
        0x00a9a9a9u32,
        0x0dcec000u32,
        0x1111009fu32,
        0x009f9f9fu32,
        0x16cf0000u32,
        0x11140090u32,
        0x00909090u32,
        0x1fcec000u32,
        0x12126985u32,
        0x00858585u32,
        0x294ec000u32,
        0x13115c72u32,
        0x00727372u32,
        0x3acec000u32,
        0x1414346eu32,
        0x006e6f6eu32,
        0x43cec000u32,
        0x11113f63u32,
        0x00636363u32,
        0x4ccec000u32,
        0x11110052u32,
        0x00525252u32,
        0x55cec000u32,
        0x11130044u32,
        0x00444444u32,
        0xd34f4000u32,
        0x1516315fu32,
        0x005f5f5fu32,
        0x804f4000u32,
        0x16172eb8u32,
        0x00b8b8b8u32,
        0xe6cf4000u32,
        0x14120028u32,
        0x00282828u32,
        0x32500000u32,
        0x15140093u32,
        0x00939393u32,
        0xf0504000u32,
        0x15115832u32,
        0x00323232u32,
        0xfb51c000u32,
        0x1414143cu32,
        0x003c3c3cu32,
        0x7c524000u32,
        0x171500dfu32,
        0x00dfdfdfu32,
        0x8e52c000u32,
        0x1316115eu32,
        0x005e5e5eu32,
        0x71530000u32,
        0x1214004du32,
        0x004d4d4du32,
        0x85d38000u32,
        0x1518a054u32,
        0x00545454u32,
        0x98d30000u32,
        0x1616005eu32,
        0x005e5e5eu32,
        0xa1d34000u32,
        0x0e160538u32,
        0x00383838u32,
        0x2ad2c000u32,
        0x16135976u32,
        0x00767676u32,
        0x39d3c000u32,
        0x17190097u32,
        0x00979797u32,
        0x42d2c000u32,
        0x15160067u32,
        0x00676767u32,
        0xd3534000u32,
        0x1514002fu32,
        0x002f2f2fu32,
        0xddd2c000u32,
        0x19110051u32,
        0x00515151u32,
        0x21530000u32,
        0x13126a98u32,
        0x00989898u32,
        0x56d38000u32,
        0x12139833u32,
        0x00333333u32,
        0x67d34000u32,
        0x12133b30u32,
        0x00303030u32,
        0xa8d34000u32,
        0x11130064u32,
        0x00646464u32,
        0xc2d34000u32,
        0x15135d40u32,
        0x00404040u32,
        0x04534000u32,
        0x121200aau32,
        0x00aaaaaau32,
        0x0e534000u32,
        0x14126c9fu32,
        0x009f9f9fu32,
        0x17d3c000u32,
        0x16168b7cu32,
        0x007c7c7cu32,
        0x4d534000u32,
        0x15126051u32,
        0x00515151u32,
        0x5ed34000u32,
        0x1111002fu32,
        0x002f2f2fu32,
        0xb0d34000u32,
        0x1012ac51u32,
        0x00515151u32,
        0xb9534000u32,
        0x12110046u32,
        0x00464646u32,
        0xe7d3c000u32,
        0x1515002du32,
        0x002d2d2du32,
        0x31550000u32,
        0x1718aa4du32,
        0x004d4d4du32,
        0xcbd44000u32,
        0x15141f5bu32,
        0x005b5b5bu32,
        0xf2540000u32,
        0x1514003au32,
        0x003a3a3au32,
        0x79564000u32,
        0x121f00c6u32,
        0x00c6c6c6u32,
        0x27568000u32,
        0x1613095fu32,
        0x005f5f5fu32,
        0x19d7c000u32,
        0x1b19002fu32,
        0x002f2f2fu32,
        0x46574000u32,
        0x0f180051u32,
        0x00515151u32,
        0x9f574000u32,
        0x1515584cu32,
        0x004c4c4cu32,
        0xd4578000u32,
        0x14162c63u32,
        0x00636363u32,
        0xfad70000u32,
        0x15154841u32,
        0x00414141u32,
        0x1f580000u32,
        0x1217005cu32,
        0x005c5c5cu32,
        0x3dd7c000u32,
        0x181600abu32,
        0x00abababu32,
        0x95578000u32,
        0x14143857u32,
        0x00575757u32,
        0xdcd70000u32,
        0x16130047u32,
        0x00474747u32,
        0xeed7c000u32,
        0x18174b1fu32,
        0x001f1f1fu32,
        0x8157c000u32,
        0x1615004au32,
        0x004a4a4au32,
        0x8b57c000u32,
        0x14130056u32,
        0x00565656u32,
        0xe4d84000u32,
        0x1418aa41u32,
        0x00414141u32,
        0x0557c000u32,
        0x161263aau32,
        0x00aaaaaau32,
        0x0fd74000u32,
        0x190e5d60u32,
        0x00606060u32,
        0x5f578000u32,
        0x13120038u32,
        0x00383838u32,
        0x71d7c000u32,
        0x15133751u32,
        0x00515151u32,
        0xc1d7c000u32,
        0x11130039u32,
        0x00393939u32,
        0x4dd80000u32,
        0x1114a53eu32,
        0x003e3e3eu32,
        0x56580000u32,
        0x1213002fu32,
        0x002f2f2fu32,
        0x6857c000u32,
        0x1112a12du32,
        0x002d2d2du32,
        0xa957c000u32,
        0x11140068u32,
        0x00686868u32,
        0xb957c000u32,
        0x11131c41u32,
        0x00414141u32,
        0xb1584000u32,
        0x0f150954u32,
        0x00545454u32,
        0xca588000u32,
        0x14136544u32,
        0x00444444u32,
        0x3158c000u32,
        0x190f00a2u32,
        0x00a2a2a2u32,
        0x26da4000u32,
        0x18160095u32,
        0x00959595u32,
        0xa3db8000u32,
        0x0d170038u32,
        0x00383838u32,
        0xd2db4000u32,
        0x15143238u32,
        0x00383838u32,
        0x0f5b0000u32,
        0x1a146f96u32,
        0x00969696u32,
        0x175c4000u32,
        0x15170057u32,
        0x00575757u32,
        0x395c0000u32,
        0x1117b3a5u32,
        0x00a5a5a5u32,
        0x79dbc000u32,
        0x13143343u32,
        0x00434343u32,
        0xdc5c0000u32,
        0x17162d5cu32,
        0x005c5c5cu32,
        0xfadbc000u32,
        0x13140024u32,
        0x00242424u32,
        0x415cc000u32,
        0x1019aaa1u32,
        0x00a1a1a1u32,
        0x9cdc4000u32,
        0x1115005au32,
        0x005a5a5au32,
        0xf15c4000u32,
        0x1417001au32,
        0x001a1a1au32,
        0x705c4000u32,
        0x13133a41u32,
        0x00414141u32,
        0x835c4000u32,
        0x1213004bu32,
        0x004b4b4bu32,
        0x49dc8000u32,
        0x13160040u32,
        0x00404040u32,
        0x53dc4000u32,
        0x14146431u32,
        0x00313131u32,
        0x5e5c0000u32,
        0x1313773du32,
        0x003d3d3du32,
        0x8c5c4000u32,
        0x1012a555u32,
        0x00555555u32,
        0x945c4000u32,
        0x10120057u32,
        0x00575757u32,
        0xac5c8000u32,
        0x16146065u32,
        0x00656565u32,
        0xb75c4000u32,
        0x1513004eu32,
        0x004e4e4eu32,
        0x04dc4000u32,
        0x1512539eu32,
        0x009e9e9eu32,
        0x2fdc8000u32,
        0x1712008eu32,
        0x008e8e8eu32,
        0x675c8000u32,
        0x12121a2bu32,
        0x002b2b2bu32,
        0xc1dc4000u32,
        0x13115844u32,
        0x00444444u32,
        0xe75cc000u32,
        0x16182239u32,
        0x00393939u32,
        0x205d4000u32,
        0x18144751u32,
        0x00515151u32,
        0xcadcc000u32,
        0x1313004fu32,
        0x004f4f4fu32,
        0xd1df8000u32,
        0x16152d65u32,
        0x00656565u32,
        0x0ce04000u32,
        0x14150094u32,
        0x00949494u32,
        0x28608000u32,
        0x161b0446u32,
        0x00464646u32,
        0x16e10000u32,
        0x151c123au32,
        0x003a3a3au32,
        0x44e0c000u32,
        0x0d1a0a62u32,
        0x00626262u32,
        0x56e08000u32,
        0x13169e33u32,
        0x00333333u32,
        0xa6608000u32,
        0x0f160d37u32,
        0x00373737u32,
        0xe3e10000u32,
        0x14190069u32,
        0x00696969u32,
        0x31608000u32,
        0x17130095u32,
        0x00959595u32,
        0x4ce10000u32,
        0x1518a42au32,
        0x002a2a2au32,
        0x5ee0c000u32,
        0x0e15aa4du32,
        0x004d4d4du32,
        0xae608000u32,
        0x15136d65u32,
        0x00656565u32,
        0xeee0c000u32,
        0x18170022u32,
        0x00222222u32,
        0xfa608000u32,
        0x16130016u32,
        0x00161616u32,
        0x0460c000u32,
        0x1212009au32,
        0x009a9a9au32,
        0x3be10000u32,
        0x16144b99u32,
        0x00999999u32,
        0x7060c000u32,
        0x13120036u32,
        0x00363636u32,
        0x79e0c000u32,
        0x1112003du32,
        0x003d3d3du32,
        0x82e08000u32,
        0x11110049u32,
        0x00494949u32,
        0x9e610000u32,
        0x1415845bu32,
        0x005b5b5bu32,
        0xdae0c000u32,
        0x13149661u32,
        0x00616161u32,
        0x66e10000u32,
        0x1412422bu32,
        0x002b2b2bu32,
        0x8be0c000u32,
        0x11110051u32,
        0x00515151u32,
        0x94e0c000u32,
        0x12120055u32,
        0x00555555u32,
        0xb860c000u32,
        0x13116149u32,
        0x00494949u32,
        0xc160c000u32,
        0x13117d40u32,
        0x00404040u32,
        0xca618000u32,
        0x15143943u32,
        0x00434343u32,
        0x1fe18000u32,
        0x15125838u32,
        0x00383838u32,
        0x2ae54000u32,
        0x1a180078u32,
        0x00787878u32,
        0x33648000u32,
        0x17137ca7u32,
        0x00a7a7a7u32,
        0x42e54000u32,
        0x101a00a3u32,
        0x00a3a3a3u32,
        0xd4e4c000u32,
        0x14162050u32,
        0x00505050u32,
        0xe9654000u32,
        0x18184065u32,
        0x00656565u32,
        0xf3650000u32,
        0x1419091cu32,
        0x001c1c1cu32,
        0x0e64c000u32,
        0x16138093u32,
        0x00939393u32,
        0xafe50000u32,
        0x15149e60u32,
        0x00606060u32,
        0x4a65c000u32,
        0x10170049u32,
        0x00494949u32,
        0x53e50000u32,
        0x1714002fu32,
        0x002f2f2fu32,
        0xa0e54000u32,
        0x1514005au32,
        0x005a5a5au32,
        0xfbe54000u32,
        0x1014ac15u32,
        0x00151515u32,
        0x66654000u32,
        0x15120023u32,
        0x00232323u32,
        0x82e50000u32,
        0x1311003fu32,
        0x003f3f3fu32,
        0x96654000u32,
        0x1512004fu32,
        0x004f4f4fu32,
        0xa8e5c000u32,
        0x0e150028u32,
        0x00282828u32,
        0xde658000u32,
        0x15154357u32,
        0x00575757u32,
        0x04e54000u32,
        0x13114a95u32,
        0x00959595u32,
        0x20e50000u32,
        0x1e11003bu32,
        0x003b3b3bu32,
        0x5ce58000u32,
        0x0f13ac4fu32,
        0x004f4f4fu32,
        0x70658000u32,
        0x1414002eu32,
        0x002e2e2eu32,
        0x79e54000u32,
        0x12120034u32,
        0x00343434u32,
        0x8c654000u32,
        0x13110049u32,
        0x00494949u32,
        0xb8e54000u32,
        0x11120052u32,
        0x00525252u32,
        0xc1e54000u32,
        0x13110043u32,
        0x00434343u32,
        0x16e68000u32,
        0x17154994u32,
        0x00949494u32,
        0xcb65c000u32,
        0x13120051u32,
        0x00515151u32,
        0x3ae60000u32,
        0x1714008du32,
        0x008d8d8du32,
        0x20694000u32,
        0x1516008eu32,
        0x008e8e8eu32,
        0x4f698000u32,
        0x0e16ad28u32,
        0x00282828u32,
        0xef69c000u32,
        0x1518a75fu32,
        0x005f5f5fu32,
        0x28ea0000u32,
        0x151b0046u32,
        0x00464646u32,
        0x32e9c000u32,
        0x1318106cu32,
        0x006c6c6cu32,
        0x476a4000u32,
        0x16191251u32,
        0x00515151u32,
        0x65698000u32,
        0x17145727u32,
        0x00272727u32,
        0x82698000u32,
        0x1312003au32,
        0x003a3a3au32,
        0xb1e9c000u32,
        0x12160c5au32,
        0x005a5a5au32,
        0xd269c000u32,
        0x12150065u32,
        0x00656565u32,
        0xdbe9c000u32,
        0x1314005bu32,
        0x005b5b5bu32,
        0xe56a0000u32,
        0x1316ae5du32,
        0x005d5d5du32,
        0x0de98000u32,
        0x13120091u32,
        0x00919191u32,
        0x55ea4000u32,
        0x0e17a735u32,
        0x00353535u32,
        0xfa69c000u32,
        0x17130018u32,
        0x00181818u32,
        0x04e9c000u32,
        0x1211008du32,
        0x008d8d8du32,
        0x5c6a0000u32,
        0x0e140057u32,
        0x00575757u32,
        0x6f6a0000u32,
        0x15135443u32,
        0x00434343u32,
        0x78e98000u32,
        0x130f003fu32,
        0x003f3f3fu32,
        0x8c69c000u32,
        0x14110044u32,
        0x00444444u32,
        0x9669c000u32,
        0x1412004au32,
        0x004a4a4au32,
        0xa069c000u32,
        0x1613565au32,
        0x005a5a5au32,
        0xba6a0000u32,
        0x10140d54u32,
        0x00545454u32,
        0xc269c000u32,
        0x11120148u32,
        0x00484848u32,
        0xc9ea0000u32,
        0x10130051u32,
        0x00515151u32,
        0x3c6a4000u32,
        0x191878a4u32,
        0x00a4a4a4u32,
        0xa96a8000u32,
        0x13140034u32,
        0x00343434u32,
        0x176ac000u32,
        0x15115891u32,
        0x00919191u32,
        0x2f6dc000u32,
        0x1516004du32,
        0x004d4d4du32,
        0x616e0000u32,
        0x1014af21u32,
        0x00212121u32,
        0x79ed8000u32,
        0x1414244fu32,
        0x004f4f4fu32,
        0x296e4000u32,
        0x0d190dc5u32,
        0x00c5c5c5u32,
        0x436e8000u32,
        0x1d16004au32,
        0x004a4a4au32,
        0xf26e4000u32,
        0x1616005cu32,
        0x005c5c5cu32,
        0x696e8000u32,
        0x1016b02du32,
        0x002d2d2du32,
        0x82ee4000u32,
        0x1214a44cu32,
        0x004c4c4cu32,
        0x9dee4000u32,
        0x1215b055u32,
        0x00555555u32,
        0xafee4000u32,
        0x0f160034u32,
        0x00343434u32,
        0xddee4000u32,
        0x1313006bu32,
        0x006b6b6bu32,
        0x1f6e8000u32,
        0x1217a47eu32,
        0x007e7e7eu32,
        0x94ee4000u32,
        0x12133347u32,
        0x00474747u32,
        0xcbee8000u32,
        0x11140e55u32,
        0x00555555u32,
        0xd46e8000u32,
        0x1315116au32,
        0x006a6a6au32,
        0xe7eec000u32,
        0x14150064u32,
        0x00646464u32,
        0xfbee4000u32,
        0x11140024u32,
        0x00242424u32,
        0x04ee8000u32,
        0x12120084u32,
        0x00848584u32,
        0x0dee8000u32,
        0x1213008bu32,
        0x008b8b8bu32,
        0x33f0c000u32,
        0x282b00b6u32,
        0x00b6b6b6u32,
        0x4f6e8000u32,
        0x17154c2du32,
        0x002d2d2du32,
        0x596ec000u32,
        0x1215a950u32,
        0x00505050u32,
        0x71ee8000u32,
        0x1212003bu32,
        0x003b3b3bu32,
        0x8bee8000u32,
        0x11120048u32,
        0x00484848u32,
        0xa76ec000u32,
        0x1515004eu32,
        0x004e4e4eu32,
        0xb86e8000u32,
        0x1515535bu32,
        0x005b5b5bu32,
        0xc26e8000u32,
        0x13120045u32,
        0x00454545u32,
        0x166f4000u32,
        0x1314988du32,
        0x008d8d8du32,
        0x24718000u32,
        0x0f1db039u32,
        0x00393939u32,
        0x3a724000u32,
        0x161a9f4au32,
        0x004a4a4au32,
        0x2df24000u32,
        0x171773d5u32,
        0x00d5d5d5u32,
        0x79f28000u32,
        0x12130034u32,
        0x00343434u32,
        0xaa730000u32,
        0x15177f55u32,
        0x00555555u32,
        0x6172c000u32,
        0x1515911au32,
        0x001a1a1au32,
        0xbaf34000u32,
        0x12180058u32,
        0x00585858u32,
        0xcaf30000u32,
        0x12150044u32,
        0x00444444u32,
        0xf3f30000u32,
        0x1916005au32,
        0x005a5a5au32,
        0x1a734000u32,
        0x17140070u32,
        0x00707070u32,
        0x4c738000u32,
        0x1516002au32,
        0x002a2a2au32,
        0x56f34000u32,
        0x1415004eu32,
        0x004e4e4eu32,
        0x69734000u32,
        0x1214003eu32,
        0x003e3e3eu32,
        0x7172c000u32,
        0x11121e31u32,
        0x00313131u32,
        0x95f30000u32,
        0x14130041u32,
        0x00414141u32,
        0x9ff34000u32,
        0x1515004au32,
        0x004a4a4au32,
        0xb2f34000u32,
        0x0f16002bu32,
        0x002b2b2bu32,
        0xde72c000u32,
        0x16130063u32,
        0x00636363u32,
        0xfcf34000u32,
        0x0d190c24u32,
        0x00242424u32,
        0x04f30000u32,
        0x13120076u32,
        0x00767876u32,
        0x0f734000u32,
        0x1513007cu32,
        0x007c7c7cu32,
        0x42f38000u32,
        0x15169141u32,
        0x00414141u32,
        0x82f34000u32,
        0x13139f3cu32,
        0x003c3c3cu32,
        0x8bf34000u32,
        0x12130040u32,
        0x00404040u32,
        0xc3734000u32,
        0x0f140e4bu32,
        0x004b4b4bu32,
        0xd3f34000u32,
        0x14123952u32,
        0x00525252u32,
        0xe8738000u32,
        0x17150064u32,
        0x00646464u32,
        0x33768000u32,
        0x15199e4du32,
        0x004d4d4du32,
        0x1ff70000u32,
        0x1418004cu32,
        0x004c4c4cu32,
        0x28f78000u32,
        0x18162b3eu32,
        0x003e3e3eu32,
        0x5e780000u32,
        0x1618001cu32,
        0x001c1c1cu32,
        0x67780000u32,
        0x141a9f63u32,
        0x00636363u32,
        0x70f7c000u32,
        0x12160051u32,
        0x00515151u32,
        0x79f7c000u32,
        0x11160051u32,
        0x00515151u32,
        0xa5f7c000u32,
        0x12170053u32,
        0x00535353u32,
        0xdcf7c000u32,
        0x12160045u32,
        0x00454545u32,
        0xf0780000u32,
        0x15171b61u32,
        0x00616161u32,
        0xfa784000u32,
        0x1518005cu32,
        0x005c5c5cu32,
        0x45780000u32,
        0x1418961du32,
        0x001d1d1du32,
        0xae784000u32,
        0x13180056u32,
        0x00565656u32,
        0xb6780000u32,
        0x13160024u32,
        0x00242424u32,
        0xc077c000u32,
        0x15163d53u32,
        0x00535353u32,
        0x0477c000u32,
        0x1213005cu32,
        0x005c5c5cu32,
        0x0d77c000u32,
        0x13140058u32,
        0x00585858u32,
        0x16f84000u32,
        0x1415004eu32,
        0x004e4e4eu32,
        0x3af84000u32,
        0x1717003cu32,
        0x003c3c3cu32,
        0x54f80000u32,
        0x1215004du32,
        0x004d4d4du32,
        0x94f80000u32,
        0x11140048u32,
        0x00484848u32,
        0x9d784000u32,
        0x1215004au32,
        0x004a4a4au32,
        0x8bf80000u32,
        0x1113b345u32,
        0x00454545u32,
        0xca784000u32,
        0x13151e47u32,
        0x00474747u32,
        0xd3f80000u32,
        0x13141946u32,
        0x00464646u32,
        0xe6788000u32,
        0x1615334eu32,
        0x004e4e4eu32,
        0x4d788000u32,
        0x1214a941u32,
        0x00414141u32,
        0x82f84000u32,
        0x1213034au32,
        0x004a4a4au32,
        0x30fc4000u32,
        0x13190021u32,
        0x00212121u32,
        0x1ffcc000u32,
        0x1118003du32,
        0x003d3d3du32,
        0xb97c4000u32,
        0x13180025u32,
        0x00252525u32,
        0x287d0000u32,
        0x1317002cu32,
        0x002c2c2cu32,
        0xbffd4000u32,
        0x1117af23u32,
        0x00232323u32,
        0x41fd0000u32,
        0x1216b111u32,
        0x00111111u32,
        0x5bfd4000u32,
        0x1316b018u32,
        0x00181818u32,
        0xc87d0000u32,
        0x17162e52u32,
        0x00525252u32,
        0x04fd0000u32,
        0x1215004cu32,
        0x004c4c4cu32,
        0x0dfd0000u32,
        0x1115b349u32,
        0x00494949u32,
        0x547d0000u32,
        0x0f15a83bu32,
        0x003b3b3bu32,
        0x65fd4000u32,
        0x1415004au32,
        0x004a4a4au32,
        0x6f7d4000u32,
        0x14150043u32,
        0x00434343u32,
        0x797d0000u32,
        0x1315044bu32,
        0x004b4b4bu32,
        0xa77d0000u32,
        0x1315ae53u32,
        0x00535353u32,
        0xd2fd4000u32,
        0x1415004eu32,
        0x004e4e4eu32,
        0xdc7d0000u32,
        0x1315004cu32,
        0x004c4c4cu32,
        0xf07d4000u32,
        0x13150044u32,
        0x00444444u32,
        0x16fd4000u32,
        0x1214b344u32,
        0x00444444u32,
        0x82fd4000u32,
        0x1214b24au32,
        0x004a4a4au32,
        0x8bfd4000u32,
        0x1114004bu32,
        0x004b4b4bu32,
        0x94fd4000u32,
        0x11140049u32,
        0x00494949u32,
        0x9e7d4000u32,
        0x1214a948u32,
        0x00484848u32,
        0xb17d8000u32,
        0x19143254u32,
        0x00545454u32,
        0x38fd8000u32,
        0x14130023u32,
        0x00232323u32,
        0x4b7d4000u32,
        0x1613004cu32,
        0x004c4c4cu32,
        0xe67d4000u32,
        0x13130044u32,
        0x00444444u32,
        0xfafd8000u32,
        0x14125a48u32,
        0x00484848u32
    ];
    let data_buffer = device.create_buffer_init(&wgpu::util::BufferInitDescriptor {
        label: Some("Data Buffer"),
        contents: bytemuck::cast_slice(&data_array),
        usage: wgpu::BufferUsages::STORAGE | wgpu::BufferUsages::COPY_DST,
    });
    let data_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
        label: Some("data_bind_group_layout"),
        entries: &[
            wgpu::BindGroupLayoutEntry {
                binding: 0,
                visibility: wgpu::ShaderStages::FRAGMENT,
                ty: wgpu::BindingType::Buffer {
                    ty: wgpu::BufferBindingType::Storage { read_only: true },
                    has_dynamic_offset: false,
                    min_binding_size: wgpu::BufferSize::new(data_array.len() as u64 * std::mem::size_of::<u32>() as u64),
                },
                count: None,
            },
        ],
    });
    let data_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
        layout: &data_bind_group_layout,
        entries: &[
            wgpu::BindGroupEntry {
                binding: 0,
                resource: data_buffer.as_entire_binding(),
            },
        ],
        label: Some("data_bind_group"),
    });
    let time_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
        entries: &[
            wgpu::BindGroupLayoutEntry {
                binding: 0,
                visibility: wgpu::ShaderStages::FRAGMENT,
                ty: wgpu::BindingType::Buffer {
                    ty: wgpu::BufferBindingType::Uniform,
                    has_dynamic_offset: false,
                    min_binding_size: wgpu::BufferSize::new(std::mem::size_of::<f32>() as _),
                },
                count: None,
            },
        ],
        label: Some("time_bind_group_layout"),
    });
    let params_bind_group_layout = device.create_bind_group_layout(&wgpu::BindGroupLayoutDescriptor {
        label: Some("params_bind_group_layout"),
        entries: &[wgpu::BindGroupLayoutEntry {
            binding: 1,
            visibility: wgpu::ShaderStages::FRAGMENT,
            ty: wgpu::BindingType::Buffer {
                ty: wgpu::BufferBindingType::Uniform,
                has_dynamic_offset: false,
                min_binding_size: wgpu::BufferSize::new((std::mem::size_of::<f32>() * 6) as _),
            },
            count: None,
        }],
    });
    let pipeline_layout = device.create_pipeline_layout(&wgpu::PipelineLayoutDescriptor {
        label: Some("Pipeline Layout"),
        bind_group_layouts: &[
            &params_bind_group_layout,
            &time_bind_group_layout,
            &data_bind_group_layout,
        ],
        push_constant_ranges: &[],
    });
    let render_pipeline = wgpu::RenderPipelineBuilder::from_layout(&pipeline_layout, &vs_mod)
        .fragment_shader(&fs_mod)
        .color_format(format)
        .add_vertex_buffer::<Vertex>(&wgpu::vertex_attr_array![0 => Float32x2])
        .sample_count(sample_count)
        .build(device);
    let time_uniform = device.create_buffer(&wgpu::BufferDescriptor {
        label: Some("Time Uniform Buffer"),
        size: std::mem::size_of::<f32>() as wgpu::BufferAddress,
        usage: wgpu::BufferUsages::UNIFORM | wgpu::BufferUsages::COPY_DST,
        mapped_at_creation: false,
    });
    let time_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
        layout: &time_bind_group_layout,
        entries: &[
            wgpu::BindGroupEntry {
                binding: 0,
                resource: time_uniform.as_entire_binding(),
            },
        ],
        label: Some("time_bind_group"),
    });
    let settings = Settings {
        lambda:-7.0,
        theta:0.5,
        alpha:14.0,
        sigma:0.01,
        gamma:1.0,
        blue:2.01,
        show_ui:true,
    };
    let params_data = [settings.lambda, settings.theta, settings.alpha,settings.sigma,settings.gamma,settings.blue];
    let params_bytes = bytemuck::cast_slice(&params_data);
    let params_uniform = device.create_buffer_init(&wgpu::util::BufferInitDescriptor {
        label: Some("Params Uniform"),
        contents: params_bytes,
        usage: wgpu::BufferUsages::UNIFORM | wgpu::BufferUsages::COPY_DST,
    });
    let params_bind_group = device.create_bind_group(&wgpu::BindGroupDescriptor {
        layout: &params_bind_group_layout,
        entries: &[
            wgpu::BindGroupEntry {
                binding: 1,
                resource: params_uniform.as_entire_binding(),
            },
        ],
        label: Some("params_bind_group"),
    });
    let window = app.window(w_id).unwrap();
    let egui = Egui::from_window(&window);
    Model {
        params_bind_group,
        settings,
        params_uniform,
        egui,
        vertex_buffer,
        render_pipeline,
        time_uniform,
        time_bind_group,
        data_bind_group,
    }
}
fn view(app: &App, model: &Model, frame: Frame) {
    let draw = app.draw();
    draw.background().color(BLACK);
    let time = app.time; 
    let time_bytes = time.to_ne_bytes();
    let binding = app.main_window();
    let queue = binding.queue();
    {
        let mut encoder = frame.command_encoder();
        queue.write_buffer(&model.time_uniform, 0, &time_bytes);
        let mut render_pass = wgpu::RenderPassBuilder::new()
            .color_attachment(frame.texture_view(), |color| color)
            .begin(&mut encoder);
        render_pass.set_bind_group(0, &model.params_bind_group, &[]);
        render_pass.set_bind_group(1, &model.time_bind_group, &[]);
        render_pass.set_bind_group(2, &model.data_bind_group, &[]); 
        render_pass.set_pipeline(&model.render_pipeline);
        render_pass.set_vertex_buffer(0, model.vertex_buffer.slice(..));

        let vertex_range = 0..VERTICES.len() as u32;
        let instance_range = 0..1;
        render_pass.draw(vertex_range, instance_range);
    }
    if model.settings.show_ui {
        model.egui.draw_to_frame(&frame).unwrap();
    }
    if app.keys.down.contains(&Key::Space) {
        let file_path = app
            .project_path()
            .expect("failed to locate project directory")
            .join("frames")
            .join(format!("{:0}.png", app.elapsed_frames()));
        app.main_window().capture_frame(file_path);
    }
}
fn vertices_as_bytes(data: &[Vertex]) -> &[u8] {
    unsafe { wgpu::bytes::from_slice(data) }
}